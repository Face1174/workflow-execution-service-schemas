{
  "swagger": "2.0",
  "info": {
    "title": "workflow_execution.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ga4gh/wes/v1/service-info": {
      "get": {
        "summary": "Get information about Workflow Execution Service.  May include information related (but not limited to) the workflow descriptor formats, versions supported, the WES API versions supported, and information about general the service availability.",
        "operationId": "GetServiceInfo",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_wes_service_info"
            }
          }
        },
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/ga4gh/wes/v1/workflows": {
      "get": {
        "summary": "List the workflows",
        "operationId": "ListWorkflows",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_wes_WorkflowListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "OPTIONAL\nNumber of workflows to return at once. Defaults to 256, and max is 2048.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page_token",
            "description": "OPTIONAL\nToken to use to indicate where to start getting results. If unspecified, returns the first page of results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "key_value_search",
            "description": "OPTIONAL\nFor each key, if the key's value is empty string then match workflows that are tagged with this key regardless of value.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      },
      "post": {
        "summary": "Run a workflow",
        "operationId": "RunWorkflow",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_wes_WorkflowRunID"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ga4gh_wes_WorkflowRequest"
            }
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/ga4gh/wes/v1/workflows/{workflow_id}": {
      "get": {
        "summary": "Get detailed info about a running workflow",
        "operationId": "GetWorkflowLog",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_wes_WorkflowLog"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      },
      "delete": {
        "summary": "Cancel a running workflow",
        "operationId": "CancelJob",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_wes_WorkflowRunID"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/ga4gh/wes/v1/workflows/{workflow_id}/status": {
      "get": {
        "summary": "Get quick status info about a running workflow",
        "operationId": "GetWorkflowStatus",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_wes_WorkflowStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    }
  },
  "definitions": {
    "ga4gh_task_execJobLog": {
      "type": "object",
      "properties": {
        "cmd": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The command line that was run"
        },
        "startTime": {
          "type": "string",
          "title": "When the command was executed"
        },
        "endTime": {
          "type": "string",
          "title": "When the command completed"
        },
        "stdout": {
          "type": "string",
          "title": "Sample of stdout (not guaranteed to be entire log)"
        },
        "stderr": {
          "type": "string",
          "title": "Sample of stderr (not guaranteed to be entire log)"
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "title": "Exit code of the program"
        },
        "hostIP": {
          "type": "string",
          "title": "ip of worker host"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execPorts"
          },
          "title": "ports bound from container to host"
        }
      }
    },
    "ga4gh_task_execPorts": {
      "type": "object",
      "properties": {
        "container": {
          "type": "integer",
          "format": "int32",
          "title": "REQUIRED \nExposed port on container"
        },
        "host": {
          "type": "integer",
          "format": "int32",
          "title": "OPTIONAL \nMust be greater than 1024;\nDefaults to 0"
        }
      },
      "title": "host to container port mappings"
    },
    "ga4gh_task_execState": {
      "type": "string",
      "enum": [
        "Unknown",
        "Queued",
        "Running",
        "Paused",
        "Complete",
        "Error",
        "SystemError",
        "Canceled",
        "Initializing"
      ],
      "default": "Unknown"
    },
    "ga4gh_task_execTaskParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "OPTIONAL\nname of the parameter"
        },
        "description": {
          "type": "string",
          "title": "OPTIONAL\nText description"
        },
        "location": {
          "type": "string",
          "title": "REQUIRED\nlocation in long term storage, is a url specific to the implementing\nsystem. For example s3://my-object-store/file1 or gs://my-bucket/file2 or\nfile:///path/to/my/file"
        },
        "path": {
          "type": "string",
          "title": "REQUIRED\npath in the machine file system. Note, this MUST be a path that exists\nwithin one of the defined volumes\nIf the file is mounted in a volume that is mounted read/write the file must\nbe accessable to processes in the container. Optimizations, suc as hard linking\nto a source file, or providing a streaming input from a FUSE mount should only\nbe done if the volume is mounted as read only"
        },
        "class": {
          "type": "string",
          "title": "REQUIRED\nType of data, \"File\" or \"Directory\"\nif used for an output all the files in the directory\nwill be copied to the storage location"
        },
        "create": {
          "type": "boolean",
          "format": "boolean",
          "title": "OPTIONAL: default false\nif the parameter is an output, should the element be created before executing\nthe command. For example if saving the working directory as an output,\nthe directory needs to exist before the command is called. If false, it is\nassumed that the user will create the element as a part of the operation"
        }
      },
      "title": "Parameters for Task"
    },
    "ga4gh_wes_WorkflowDesc": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "REQUIRED"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "REQUIRED"
        }
      },
      "title": "Small description of workflows, returned by server during listing"
    },
    "ga4gh_wes_WorkflowListRequest": {
      "type": "object",
      "properties": {
        "page_size": {
          "type": "integer",
          "format": "int64",
          "description": "OPTIONAL\nNumber of workflows to return at once. Defaults to 256, and max is 2048."
        },
        "page_token": {
          "type": "string",
          "description": "OPTIONAL\nToken to use to indicate where to start getting results. If unspecified, returns the first page of results."
        },
        "key_value_search": {
          "type": "string",
          "title": "OPTIONAL\nFor each key, if the key's value is empty string then match workflows that are tagged with this key regardless of value"
        }
      },
      "title": "Request listing of jobs tracked by server"
    },
    "ga4gh_wes_WorkflowListResponse": {
      "type": "object",
      "properties": {
        "workflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_wes_WorkflowDesc"
          }
        },
        "next_page_token": {
          "type": "string"
        }
      },
      "title": "Return envelope for workflow listing"
    },
    "ga4gh_wes_WorkflowLog": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "workflow ID"
        },
        "request": {
          "$ref": "#/definitions/ga4gh_wes_WorkflowRequest",
          "title": "the original request object"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "state"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execJobLog"
          },
          "title": "the logs, and other key info like timing and exit code, for the overall run of this workflow"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execTaskParameter"
          },
          "title": "the outputs"
        }
      }
    },
    "ga4gh_wes_WorkflowRequest": {
      "type": "object",
      "properties": {
        "workflow_descriptor": {
          "type": "string",
          "title": "REQUIRED\nthe workflow CWL or WDL document"
        },
        "workflow_params": {
          "type": "string",
          "title": "REQUIRED\nthe workflow parameterization document (typically a JSON file)"
        },
        "workflow_type": {
          "type": "string",
          "title": "REQUIRED\nthe workflow descriptor type, must be \"CWL\" or \"WDL\" currently (or another alternative supported by this WES instance)"
        },
        "workflow_type_version": {
          "type": "string",
          "title": "REQUIRED\nthe workflow descriptor type version, must be one supported by this WES instance"
        },
        "key_values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "OPTIONAL\na key-value map of arbitrary metadata outside the scope of the workflow_params but useful to track with this workflow request"
        }
      },
      "title": "workflow request object"
    },
    "ga4gh_wes_WorkflowRunID": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "workflow ID"
        }
      }
    },
    "ga4gh_wes_WorkflowStatus": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "workflow ID"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "state"
        }
      }
    },
    "ga4gh_wes_WorkflowTypeVersion": {
      "type": "object",
      "properties": {
        "workflow_type_version": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "an array of one or more version strings"
        }
      },
      "title": "available workflow types supported by this WES"
    },
    "ga4gh_wes_service_info": {
      "type": "object",
      "properties": {
        "workflow_type_versions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ga4gh_wes_WorkflowTypeVersion"
          },
          "title": "A map with keys as the workflow format type name (currently only CWL and WDL are used) and value is a WorkflowTypeVersion object which simply contains an array of one or more version strings"
        },
        "supported_wes_versions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The version(s) of the WES schema supported by this service"
        },
        "engine_versions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "The engine(s) used by this WES service, key is engine name e.g. Cromwell and value is version"
        },
        "system_state_counts": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "description": "The system statistics, key is the statistic, value is the count of workflows in that state. See the State enum for the possible keys."
        },
        "key_values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "a key-value map of arbitrary, extended metadata outside the scope of the above but useful to report back"
        }
      },
      "description": "."
    },
    "ga4gh_wes_service_info_request": {
      "type": "object",
      "title": "Blank request message for service request"
    }
  }
}
