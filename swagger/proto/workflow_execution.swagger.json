{
  "swagger": "2.0",
  "info": {
    "title": "workflow_execution.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/workflows": {
      "get": {
        "summary": "List the workflows",
        "operationId": "ListWorkflows",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "projectID",
            "description": "Required. The name of the project to search for pipelines. Caller must have READ access to this project.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namePrefix",
            "description": "Pipelines with names that match this prefix should be returned. If unspecified, all pipelines in the project, up to pageSize, will be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "Number of pipelines to return at once. Defaults to 256, and max is 2048.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageToken",
            "description": "Token to use to indicate where to start getting results. If unspecified, returns the first page of results.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      },
      "post": {
        "summary": "Run a workflow",
        "operationId": "RunWorkflow",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowRunID"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowRequest"
            }
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/v1/workflows/{workflow_id}": {
      "delete": {
        "summary": "Cancel a running workflow",
        "operationId": "CancelJob",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowRunID"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/v1/workflows/{workflow_id}/log": {
      "get": {
        "summary": "Get detailed info about a running workflow",
        "operationId": "GetWorkflowLog",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowLog"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/v1/workflows/{workflow_id}/status": {
      "get": {
        "summary": "Get quick status info about a running workflow",
        "operationId": "GetWorkflowStatus",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    }
  },
  "definitions": {
    "ga4gh_task_execJobListRequest": {
      "type": "object",
      "properties": {
        "projectID": {
          "type": "string",
          "description": "Required. The name of the project to search for pipelines. Caller must have READ access to this project."
        },
        "namePrefix": {
          "type": "string",
          "description": "Pipelines with names that match this prefix should be returned. If unspecified, all pipelines in the project, up to pageSize, will be returned."
        },
        "pageSize": {
          "type": "integer",
          "format": "int64",
          "description": "Number of pipelines to return at once. Defaults to 256, and max is 2048."
        },
        "pageToken": {
          "type": "string",
          "description": "Token to use to indicate where to start getting results. If unspecified, returns the first page of results."
        }
      }
    },
    "ga4gh_task_execJobLog": {
      "type": "object",
      "properties": {
        "cmd": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The command line that was run"
        },
        "startTime": {
          "type": "string",
          "title": "When the command was executed"
        },
        "endTime": {
          "type": "string",
          "title": "When the command completed"
        },
        "stdout": {
          "type": "string",
          "title": "Sample of stdout (not guaranteed to be entire log)"
        },
        "stderr": {
          "type": "string",
          "title": "Sample of stderr (not guaranteed to be entire log)"
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "title": "Exit code of the program"
        }
      }
    },
    "ga4gh_task_execState": {
      "type": "string",
      "enum": [
        "Unknown",
        "Queued",
        "Running",
        "Paused",
        "Complete",
        "Error",
        "SystemError",
        "Canceled"
      ],
      "default": "Unknown"
    },
    "ga4gh_task_execTaskParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the parameter"
        },
        "description": {
          "type": "string",
          "title": "optional text description"
        },
        "location": {
          "type": "string",
          "title": "location in long term storage, is a url specific to the implementing \nsystem. For example s3://my-object-store/file1 or gs://my-bucket/file2 or\nfile:///path/to/my/file"
        },
        "path": {
          "type": "string",
          "title": "path in the machine file system. Note, this MUST be a path that exists\nwithin one of the defined volumes"
        },
        "class": {
          "type": "string",
          "title": "Type of data, \"File\" or \"Directory\"\nif used for an output all the files in the directory\nwill be copied to the storage location"
        },
        "create": {
          "type": "boolean",
          "format": "boolean",
          "title": "if the parameter is an output, should the element be created before executing\nthe command. For example if saving the working directory as an output,\nthe directory needs to exist before the command is called. If false, it is\nassumed that the user will create the element as a part of the operation"
        }
      },
      "title": "Parameters for Task"
    },
    "ga4gh_workflow_execJobDesc": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "REQUIRED"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "REQUIRED"
        }
      },
      "title": "Small description of workflows, returned by server during listing"
    },
    "ga4gh_workflow_execWorkflowListResponse": {
      "type": "object",
      "properties": {
        "workflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_workflow_execJobDesc"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "title": "Return envelope for workflow listing"
    },
    "ga4gh_workflow_execWorkflowLog": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "workflow ID"
        },
        "request": {
          "$ref": "#/definitions/ga4gh_workflow_execWorkflowRequest",
          "title": "the original request object"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "a key-value map of arbitrary metadata outside the scope of the workflow_params but useful to track with this workflow request"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "state"
        },
        "logs": {
          "$ref": "#/definitions/ga4gh_task_execJobLog",
          "title": "the log, and other key info like timing and exit code, for the overall run of this workflow"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execTaskParameter"
          },
          "title": "the outputs"
        }
      }
    },
    "ga4gh_workflow_execWorkflowRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "OPTIONAL\nuser name of the workflow"
        },
        "project_id": {
          "type": "string",
          "title": "OPTIONAL\nparameter for execution engine to define/store group information"
        },
        "description": {
          "type": "string",
          "title": "OPTIONAL\nfree text description of task"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "OPTIONAL\na key-value map of arbitrary metadata outside the scope of the workflow_params but useful to track with this workflow request"
        },
        "workflow_descriptor": {
          "type": "string",
          "title": "REQUIRED\nthe workflow CWL or WDL document"
        },
        "workflow_params": {
          "type": "string",
          "title": "REQUIRED\nthe workflow parameterization (typically a JSON file)"
        },
        "workflow_type": {
          "$ref": "#/definitions/ga4gh_workflow_execWorkflowType",
          "title": "REQUIRED\nthe workflow descriptor type"
        },
        "workflow_type_version": {
          "type": "string",
          "title": "REQUIRED\nthe workflow descriptor type version"
        }
      },
      "title": "workflow request object"
    },
    "ga4gh_workflow_execWorkflowRunID": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "workflow ID"
        }
      }
    },
    "ga4gh_workflow_execWorkflowStatus": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "workflow ID"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "state"
        }
      }
    },
    "ga4gh_workflow_execWorkflowType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "CWL",
        "WDL"
      ],
      "default": "UNKNOWN",
      "title": "available workflow types supported by this WES"
    }
  }
}
