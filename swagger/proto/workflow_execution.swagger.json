{
  "swagger": "2.0",
  "info": {
    "title": "workflow_execution.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/workflows": {
      "get": {
        "summary": "List the workflows",
        "operationId": "ListWorkflows",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "projectID",
            "description": "OPTIONAL\nThe name of the project to search for pipelines. Caller must have READ access to this project.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namePrefix",
            "description": "OPTIONAL\nPipelines with names that match this prefix should be returned. If unspecified, all pipelines in the project, up to pageSize, will be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "OPTIONAL\nNumber of pipelines to return at once. Defaults to 256, and max is 2048.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageToken",
            "description": "OPTIONAL\nToken to use to indicate where to start getting results. If unspecified, returns the first page of results.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      },
      "post": {
        "summary": "Run a workflow",
        "operationId": "RunWorkflow",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowRunID"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowRequest"
            }
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/v1/workflows/{workflow_id}": {
      "get": {
        "summary": "Get detailed info about a running workflow",
        "operationId": "GetWorkflowLog",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowLog"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      },
      "delete": {
        "summary": "Cancel a running workflow",
        "operationId": "CancelJob",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowRunID"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/v1/workflows/{workflow_id}/status": {
      "get": {
        "summary": "Get quick status info about a running workflow",
        "operationId": "GetWorkflowStatus",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_workflow_execWorkflowStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    }
  },
  "definitions": {
    "ga4gh_task_execJobListRequest": {
      "type": "object",
      "properties": {
        "projectID": {
          "type": "string",
          "description": "OPTIONAL\nThe name of the project to search for pipelines. Caller must have READ access to this project."
        },
        "namePrefix": {
          "type": "string",
          "description": "OPTIONAL\nPipelines with names that match this prefix should be returned. If unspecified, all pipelines in the project, up to pageSize, will be returned."
        },
        "pageSize": {
          "type": "integer",
          "format": "int64",
          "description": "OPTIONAL\nNumber of pipelines to return at once. Defaults to 256, and max is 2048."
        },
        "pageToken": {
          "type": "string",
          "description": "OPTIONAL\nToken to use to indicate where to start getting results. If unspecified, returns the first page of results."
        }
      },
      "title": "Request listing of jobs tracked by server"
    },
    "ga4gh_task_execJobLog": {
      "type": "object",
      "properties": {
        "cmd": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The command line that was run"
        },
        "startTime": {
          "type": "string",
          "title": "When the command was executed"
        },
        "endTime": {
          "type": "string",
          "title": "When the command completed"
        },
        "stdout": {
          "type": "string",
          "title": "Sample of stdout (not guaranteed to be entire log)"
        },
        "stderr": {
          "type": "string",
          "title": "Sample of stderr (not guaranteed to be entire log)"
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "title": "Exit code of the program"
        },
        "hostIP": {
          "type": "string",
          "title": "ip of worker host"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execPorts"
          },
          "title": "ports bound from container to host"
        }
      }
    },
    "ga4gh_task_execPorts": {
      "type": "object",
      "properties": {
        "container": {
          "type": "integer",
          "format": "int32",
          "title": "REQUIRED \nExposed port on container"
        },
        "host": {
          "type": "integer",
          "format": "int32",
          "title": "OPTIONAL \nMust be greater than 1024;\nDefaults to 0"
        }
      },
      "title": "host to container port mappings"
    },
    "ga4gh_task_execState": {
      "type": "string",
      "enum": [
        "Unknown",
        "Queued",
        "Running",
        "Paused",
        "Complete",
        "Error",
        "SystemError",
        "Canceled",
        "Initializing"
      ],
      "default": "Unknown"
    },
    "ga4gh_task_execTaskParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "OPTIONAL\nname of the parameter"
        },
        "description": {
          "type": "string",
          "title": "OPTIONAL\nText description"
        },
        "location": {
          "type": "string",
          "title": "REQUIRED\nlocation in long term storage, is a url specific to the implementing\nsystem. For example s3://my-object-store/file1 or gs://my-bucket/file2 or\nfile:///path/to/my/file"
        },
        "path": {
          "type": "string",
          "title": "REQUIRED\npath in the machine file system. Note, this MUST be a path that exists\nwithin one of the defined volumes\nIf the file is mounted in a volume that is mounted read/write the file must\nbe accessable to processes in the container. Optimizations, suc as hard linking\nto a source file, or providing a streaming input from a FUSE mount should only\nbe done if the volume is mounted as read only"
        },
        "class": {
          "type": "string",
          "title": "REQUIRED\nType of data, \"File\" or \"Directory\"\nif used for an output all the files in the directory\nwill be copied to the storage location"
        },
        "create": {
          "type": "boolean",
          "format": "boolean",
          "title": "OPTIONAL: default false\nif the parameter is an output, should the element be created before executing\nthe command. For example if saving the working directory as an output,\nthe directory needs to exist before the command is called. If false, it is\nassumed that the user will create the element as a part of the operation"
        }
      },
      "title": "Parameters for Task"
    },
    "ga4gh_workflow_execJobDesc": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "REQUIRED"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "REQUIRED"
        }
      },
      "title": "Small description of workflows, returned by server during listing"
    },
    "ga4gh_workflow_execWorkflowListResponse": {
      "type": "object",
      "properties": {
        "workflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_workflow_execJobDesc"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "title": "Return envelope for workflow listing"
    },
    "ga4gh_workflow_execWorkflowLog": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "workflow ID"
        },
        "request": {
          "$ref": "#/definitions/ga4gh_workflow_execWorkflowRequest",
          "title": "the original request object"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "a key-value map of arbitrary metadata outside the scope of the workflow_params but useful to track with this workflow request"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "state"
        },
        "logs": {
          "$ref": "#/definitions/ga4gh_task_execJobLog",
          "title": "the log, and other key info like timing and exit code, for the overall run of this workflow"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execTaskParameter"
          },
          "title": "the outputs"
        }
      }
    },
    "ga4gh_workflow_execWorkflowRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "OPTIONAL\nuser name of the workflow"
        },
        "project_id": {
          "type": "string",
          "title": "OPTIONAL\nparameter for execution engine to define/store group information"
        },
        "description": {
          "type": "string",
          "title": "OPTIONAL\nfree text description of task"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "OPTIONAL\na key-value map of arbitrary metadata outside the scope of the workflow_params but useful to track with this workflow request"
        },
        "workflow_descriptor": {
          "type": "string",
          "title": "REQUIRED\nthe workflow CWL or WDL document"
        },
        "workflow_params": {
          "type": "string",
          "title": "REQUIRED\nthe workflow parameterization (typically a JSON file)"
        },
        "workflow_type": {
          "$ref": "#/definitions/ga4gh_workflow_execWorkflowType",
          "title": "REQUIRED\nthe workflow descriptor type"
        },
        "workflow_type_version": {
          "type": "string",
          "title": "REQUIRED\nthe workflow descriptor type version"
        }
      },
      "title": "workflow request object"
    },
    "ga4gh_workflow_execWorkflowRunID": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "workflow ID"
        }
      }
    },
    "ga4gh_workflow_execWorkflowStatus": {
      "type": "object",
      "properties": {
        "workflow_id": {
          "type": "string",
          "title": "workflow ID"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "state"
        }
      }
    },
    "ga4gh_workflow_execWorkflowType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "CWL",
        "WDL"
      ],
      "default": "UNKNOWN",
      "title": "available workflow types supported by this WES"
    }
  }
}
